-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
daml 1.2
module Main where

import DA.Assert

diff : [Int] -> [Int] -> [Int]
diff = curry $ \case
  ([], ys) -> []
  (xs, []) -> xs
  (x::xs, y::ys)
    | x < y -> x :: diff xs (y::ys)
    | x == y -> diff xs ys
    | otherwise -> diff (x::xs) ys

range : Int -> Int -> [Int]
range m n  = if m <= n then m :: range (m+1) n else []

solve_aux : [Int] -> [[Int]] -> [[Int]]
solve_aux ints = \case
  [] -> [[]]
  ks::kss ->
      concatMap (\k ->
        map (k::)
          (solve_aux ints (zipWith (\ls i ->
              diff ls [k-i,k,k+i])
            kss
            ints)))
      ks

solve : Int -> [[Int]]
solve n =
  let ints = range 1 n
  in  solve_aux ints (replicate n ints)

main : Update ()
main = do
    length (solve 8) === 92
