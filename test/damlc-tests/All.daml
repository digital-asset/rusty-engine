-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
daml 1.2
module All where

import ActionFail ()
import AliasCompression ()
import AliasNonLocal ()
-- Needs newer SDK: import BadCodePoint ()
import Bad ()
import Choice_no_params_template ()
import Choice_superfluous_with ()
import CoerceContractId ()
import Collision ()
-- Fixme contract keys: import ComposedKey ()
import Conjunction ()
import Constraint ()
-- Fixme: import ConsumingTests ()
-- Fixme contract kets: import ContractKeys ()
import CustomOptional ()
import DataRecursion ()
import DataTypes ()
import DefaultMethods ()
import Deriving ()
import DesugarWarnings ()
import DisjunctionChoices ()
-- Fixme: import Divulgence ()
-- Fixme: import Either ()
import Empty ()
import Enum ()
-- Fixme: import EnumFromThenTo ()
import EqContractId ()
import EqPoly ()
import EqualList ()
import ExerciseWithoutActors ()
import Fib ()
import FunRetTypeSig ()
import Generics ()
import GenericTemplates ()
-- Fixme: import GenTemplCompat ()
import GetParty ()
import GetPartyError ()
-- Needs newer SDK: import GoodCodePoints ()
import Good ()
import Hack ()
-- Supposed to fail: import HelloWorld ()
import HKTemplate ()
-- Suppposed to fail: import IntBoundsDynamic ()
-- Fixme Decimal: import Iou12 ()
import Iou ()
-- Fixme Decimal: import IouDSL ()
import Iou_new ()
-- Fixme Decimal: import Iou_template ()
-- Needs newer SDK: import Isomorphism ()
-- Needs newer SDK: import IsomorphismFail ()
-- Fixme: import Lazy ()
import ListComprehension ()
-- Fixme Decimal: import List ()
import ListEq ()
import LogicTest ()
import Main ()
-- Fixme Map: import Map ()
-- Fixme Decimal: import Math ()
import MaybeCompat ()
import Nat ()
import Newtype ()
import NewtypeDerive ()
import NewtypeHigherKinded ()
import NewtypeNested ()
import NewtypePolymorphic ()
import NoCaseOfCase ()
import No_concat_clash ()
import NonEmpty ()
import NumericUnderscore ()
-- Fixme Decimal: import Optional ()
import Optional_Total ()
import OrdOptional ()
import Otherwise ()
import PartyCompare ()
-- Fixme Party chars: import PartyVsText ()
-- Supposed to fail: import PatError ()
import PatternSynonyms ()
import Phantom ()
-- Supposed to fail: import PolymorphicTest ()
-- Supposed to fail: import Precondition ()
-- Fixme Decimal: import PreludeTest ()
import Profunctor ()
import ProposalDSL ()
import QualifiedPrelude ()
import Queens ()
import Random ()
import Rank2 ()
import RationalLowerBoundMax ()
import RationalPrecisionMax ()
import RationalUpperBoundMax ()
import RecordBig ()
-- Supposed to fail: import Records ()
import RecordUpdate ()
-- Supposed to fail: import RightOfUse ()
import SameNameConstructor ()
-- Fixme: import ScenarioReturningUpdate ()
-- Fixme: import Self2 ()
import Self ()
import SerializableAnnotation ()
import SerializablePolymorphicContractId ()
-- Fixme Map: import Set ()
-- Fixme Sha356: import Sha256 ()
import ShortCircuit ()
-- Fixme Decimal: import Show ()
import Simple ()
import Sort ()
import Stdlib ()
import SubmitFail ()
import SugarUnit ()
import SumProducts ()
import Symbol ()
-- Fixme Decimal: import Text ()
import TextEq ()
-- Fixme Map: import TextMap ()
-- Fixme Trace: import Trace ()
import Tuple ()
-- Supposed to fail: import Unicode ()
-- Supposed to fail: import UnusedLet ()
import UseInteger ()
import Validation ()
import Warnings ()
